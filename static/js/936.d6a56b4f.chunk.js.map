{"version":3,"file":"static/js/936.d6a56b4f.chunk.js","mappings":"qPACA,GAAgB,UAAY,wBAAwB,iBAAiB,6BAA6B,KAAO,mBAAmB,UAAY,wBAAwB,UAAY,wBAAwB,OAAS,sB,SCwF7M,EA1Ca,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,8GAELC,EAAAA,EAAAA,MAFK,OAElBC,EAFkB,OAGxBJ,EAAUI,EAAKC,SAHS,gDAKxBC,QAAQC,MAAM,kCAAd,MALwB,yDAAH,qDASzBL,GACD,GAAE,KAGD,iBAAKM,UAAWC,EAAAA,UAAhB,WACE,SAAC,KAAD,CAAMC,GAAG,IAAIF,UAAWC,EAAAA,SAAxB,mBAGA,SAAC,KAAD,CAAMC,GAAG,UAAUF,UAAWC,EAAAA,KAA9B,qBAGA,eAAID,UAAWC,EAAAA,UAAf,SACGV,EAAOY,KAAI,SAAAC,GAAK,OACf,eAAmBJ,UAAWC,EAAAA,UAA9B,UACE,UAAC,KAAD,CAAMC,GAAE,kBAAaE,EAAMC,IAA3B,WACE,gBACEC,IAAG,yCAAoCF,EAAMG,aAC7CC,IAAKJ,EAAMK,MACXT,UAAWC,EAAAA,UAEb,wBAAKG,EAAMK,YAPNL,EAAMC,GADA,QAexB,C,sLCpFKK,EAAS,mCAAG,WAAMC,GAAN,kGAESC,MAAM,+BAAD,OACKD,EADL,oBALhB,qCAGE,WAERE,EAFQ,QAKAC,GALA,sBAMN,IAAIC,MAAJ,sCAAyCF,EAASG,SAN5C,uBAQKH,EAASI,OARd,cAQRrB,EARQ,yBASPA,GATO,wCAWdE,QAAQC,MAAM,aAAd,MAXc,+DAAH,sDAiBFJ,EAAiB,mCAAG,uGACxBe,EAAU,wBADc,2CAAH,qDAKjBQ,EAAY,mCAAG,WAAMC,GAAN,0FACnBT,EAAU,uBAAD,OAAwBS,KADd,2CAAH,sDAKZC,EAAe,mCAAG,WAAMC,GAAN,0FACtBX,EAAU,UAAD,OAAWW,KADE,2CAAH,sDAKfC,EAAe,mCAAG,WAAMD,GAAN,0FACtBX,EAAU,UAAD,OAAWW,EAAX,cADa,2CAAH,sDAKfE,EAAe,mCAAG,WAAMF,GAAN,0FACtBX,EAAU,UAAD,OAAWW,EAAX,cADa,2CAAH,qD,sBCxC5B,SAASG,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOlC,GAEP,YADA4B,EAAO5B,EAET,CAEIiC,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["webpack://react-homework-template/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx","services/api.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Home_container__w+u63\",\"link-container\":\"Home_link-container__JTWI+\",\"link\":\"Home_link__2zIq5\",\"movieList\":\"Home_movieList__Sm4J-\",\"movieCard\":\"Home_movieCard__-NT8X\",\"poster\":\"Home_poster__GFYjc\"};","/*import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getTrendingMovies } from '../../services/api'; // Importuj funkcję do pobierania popularnych filmów\nimport styles from './Home.module.css';\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        const data = await getTrendingMovies();\n        setMovies(data.results);\n      } catch (error) {\n        console.error('Error fetching trending movies:', error);\n      }\n    };\n\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <h1>Home</h1>\n      <ul className={styles.movieList}>\n        {movies.map(movie => (\n          <li key={movie.id} className={styles.movieCard}>\n            <Link to={`/movies/${movie.id}`}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                alt={movie.title}\n                className={styles.poster}\n              />\n              <h2>{movie.title}</h2>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;*/\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'; // Importuj Link\nimport { getTrendingMovies } from '../../services/api';\nimport styles from './Home.module.css';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        const data = await getTrendingMovies();\n        setMovies(data.results);\n      } catch (error) {\n        console.error('Error fetching trending movies:', error);\n      }\n    };\n\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <Link to=\"/\" className={styles.homeLink}>\n        Home\n      </Link>\n      <Link to=\"/movies\" className={styles.link}>\n        Movies\n      </Link>\n      <ul className={styles.movieList}>\n        {movies.map(movie => (\n          <li key={movie.id} className={styles.movieCard}>\n            <Link to={`/movies/${movie.id}`}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                alt={movie.title}\n                className={styles.poster}\n              />\n              <h2>{movie.title}</h2>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;\n","const API_KEY = '904ef6f007cb228dd6ac008b3d697336';\n\n// Funkcja do wykonania zapytania GET na podstawie podanego endpointu\nconst fetchData = async endpoint => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3${endpoint}?api_key=${API_KEY}`\n    );\n    if (!response.ok) {\n      throw new Error(`Request failed with status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('API Error:', error);\n    throw error;\n  }\n};\n\n// Funkcja do pobierania listy najpopularniejszych filmów\nexport const getTrendingMovies = async () => {\n  return fetchData('/trending/movie/day');\n};\n\n// Funkcja do wyszukiwania filmów po słowie kluczowym\nexport const searchMovies = async query => {\n  return fetchData(`/search/movie?query=${query}`);\n};\n\n// Funkcja do pobierania szczegółowych informacji o filmie na podstawie movieId\nexport const getMovieDetails = async movieId => {\n  return fetchData(`/movie/${movieId}`);\n};\n\n// Funkcja do pobierania informacji o zespole aktorskim na podstawie movieId\nexport const getMovieCredits = async movieId => {\n  return fetchData(`/movie/${movieId}/credits`);\n};\n\n// Funkcja do pobierania recenzji filmu na podstawie movieId\nexport const getMovieReviews = async movieId => {\n  return fetchData(`/movie/${movieId}/reviews`);\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","movies","setMovies","useEffect","fetchTrendingMovies","getTrendingMovies","data","results","console","error","className","styles","to","map","movie","id","src","poster_path","alt","title","fetchData","endpoint","fetch","response","ok","Error","status","json","searchMovies","query","getMovieDetails","movieId","getMovieCredits","getMovieReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}